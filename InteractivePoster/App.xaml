<Application x:Class="InteractivePoster.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="clr-namespace:WpfMath.Controls;assembly=WpfMath"
             xmlns:local="clr-namespace:InteractivePoster"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Style BasedOn ="{StaticResource {x:Type Button}}"
               TargetType="Button"
               x:Key="MenuButtonTheme">
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="Transparent"
                                CornerRadius="20">
                            <Image Source="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" Width="300" Height="200"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style BasedOn ="{StaticResource {x:Type ToggleButton}}"
               TargetType="RadioButton"
               x:Key="MenuButtonThemeParabola">
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Opacity" Value="0.5"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="Transparent"
                                CornerRadius="20">
                            <TextBlock Text="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
                              TextAlignment="Center" 
                                       FontSize="25"
                                       Foreground="#262F34"                             />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style BasedOn ="{StaticResource {x:Type CheckBox}}"
               TargetType="CheckBox"
               x:Key="CheckBoxContext">           
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Border BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="Transparent"
                                CornerRadius="20">
                            <TextBlock Text="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
                              TextAlignment="Center"
                                         FontFamily="/InteractivePoster;component/Resource/Fonts/#Flanker Griffo"      
                                       FontSize="26"
                                       FontWeight="Bold"
                                       Foreground="#F34A4A" 
                                       Background="Transparent" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style  x:Key="HideTheopry" TargetType="StackPanel">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=Circle_Header, Path=IsChecked}"
                        Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=Circle_Header, Path=IsChecked}"
                        Value="False">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Button" x:Key="BackButton">
            <Setter Property="FontFamily" Value="/InteractivePoster;component/Resource/Fonts/#Flanker Griffo"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="#262F34"/>
            <Setter Property="Background" Value="#F1D3BC"/>
        </Style>
        <Style TargetType="controls:FormulaControl" x:Key="FormulaStyle">
            <Setter Property="FontFamily" Value="/InteractivePoster;component/Resource/Fonts/#Flanker Griffo"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Foreground" Value="#262F34"/>
            <Setter Property="Background" Value="#F1D3BC"/>
        </Style>
        <Style x:Key="SoundButton"  TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#F1D3BC"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Application.Resources>
</Application>
