<Application x:Class="InteractivePoster.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="clr-namespace:WpfMath.Controls;assembly=WpfMath"
             xmlns:local="clr-namespace:InteractivePoster"
             StartupUri="MainWindow.xaml"
             >
    <Application.Resources>
        <Style BasedOn ="{StaticResource {x:Type Button}}"
               TargetType="Button"
               x:Key="MenuButtonTheme">
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="Transparent"
                                CornerRadius="20"
                                Width="370" Height="270">
                            <Image Source="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" Width="350" Height="250"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style BasedOn ="{StaticResource {x:Type ToggleButton}}"
               TargetType="RadioButton"
               x:Key="MenuButtonThemeParabola">
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Opacity" Value="0.5"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="Transparent"
                                CornerRadius="20">
                            <TextBlock Text="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
                              TextAlignment="Center" 
                                       FontSize="25"
                                       Foreground="#262F34"                             />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style BasedOn ="{StaticResource {x:Type CheckBox}}"
               TargetType="CheckBox"
               x:Key="CheckBoxContext">           
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Border BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="Transparent"
                                CornerRadius="20">
                            <TextBlock Text="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
                              TextAlignment="Center"
                                         FontFamily="/InteractivePoster;component/Resource/Fonts/#Flanker Griffo"      
                                       FontSize="26"
                                       FontWeight="Bold"
                                       Foreground="#F34A4A" 
                                       Background="Transparent" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style  x:Key="HideTheopry" TargetType="StackPanel">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=Circle_Header, Path=IsChecked}"
                        Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=Circle_Header, Path=IsChecked}"
                        Value="False">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Button" x:Key="BackButton">
            <Setter Property="FontFamily" Value="/InteractivePoster;component/Resource/Fonts/#Flanker Griffo"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="#262F34"/>
            <Setter Property="Background" Value="#F1D3BC"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#F1D3BC"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="controls:FormulaControl" x:Key="FormulaStyle">
            <Setter Property="FontFamily" Value="/InteractivePoster;component/Resource/Fonts/#Flanker Griffo"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Foreground" Value="#262F34"/>
            <Setter Property="Background" Value="#F1D3BC"/>
        </Style>
        <Style x:Key="SoundButton"  TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#F1D3BC"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="TextBoxForSlider" TargetType="TextBox">
            <Setter Property="FontFamily" Value="/InteractivePoster;component/Resource/Fonts/#Flanker Griffo"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="#262F34"/>
            <Setter Property="Width" Value="45"/>
            <Setter Property="Height" Value="30"/>
        </Style>

        <Style x:Key="RepeatButtonTransparent"
       TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle"
            Value="true" />
            <Setter Property="Background"
            Value="Transparent" />
            <Setter Property="Focusable"
            Value="false" />
            <Setter Property="IsTabStop"
            Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Width="{TemplateBinding Width}"
                           Height="{TemplateBinding Height}"
                           Fill="{TemplateBinding Background}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="SliderThumbHorizontalDefault"
                 TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center"
          VerticalAlignment="Center"
          UseLayoutRounding="True">
                <Path x:Name="grip"
              VerticalAlignment="Center"
                      Fill="#262F34"
              SnapsToDevicePixels="True"
              Stretch="Fill"
              UseLayoutRounding="True">
                    <Path.Data>
                        <EllipseGeometry Center="0,0"
                                 RadiusX="10"
                                 RadiusY="10" />
                    </Path.Data>
                </Path>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderHorizontal"
                 TargetType="{x:Type Slider}">
            <Border x:Name="border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto"
                               MinHeight="{TemplateBinding MinHeight}" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Border x:Name="TrackBackground"
                    Grid.Row="1"
                    Height="5.0"
                    Margin="5,0"
                    VerticalAlignment="center"
                    Background="#F34A4A" />
                    <Border x:Name="TrackDarkener"
                    Grid.Row="1"
                    Width="{Binding ActualWidth, ElementName=RightRepeatButton}"
                    Height="5.0"
                    Margin="5,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Background="#615049" />
                    <Track x:Name="PART_Track"
                   Grid.Row="1">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}"
                                  Style="{StaticResource RepeatButtonTransparent}" />
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton x:Name="RightRepeatButton"
                                  Command="{x:Static Slider.IncreaseLarge}"
                                  Style="{StaticResource RepeatButtonTransparent}" />
                        </Track.IncreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb x:Name="Thumb"
                           Width="18"
                           Height="18"
                           VerticalAlignment="Center"
                           Focusable="False"
                           OverridesDefaultStyle="True"
                           Template="{StaticResource SliderThumbHorizontalDefault}" />
                        </Track.Thumb>
                    </Track>
                </Grid>
            </Border>
        </ControlTemplate>
        <Style x:Key="MediaPlayerSliderStyle"
       TargetType="{x:Type Slider}">
            <Setter Property="Background"
            Value="Transparent" />
            <Setter Property="BorderBrush"
            Value="Transparent" />

            <Setter Property="Template"
            Value="{StaticResource SliderHorizontal}" />
            <Setter Property="IsMoveToPointEnabled"
            Value="True" />
        </Style>


        <Style BasedOn ="{StaticResource {x:Type CheckBox}}"
               TargetType="CheckBox"
               x:Key="CheckBoxTheme">
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Opacity" Value="0.3"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Opacity" Value="1"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Border BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="Transparent"
                                CornerRadius="20"
                                Width="450" Height="40">
                            <TextBlock Text="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
                              TextAlignment="Center" 
                                       FontSize="18"
                                       VerticalAlignment="Center"
                                       Foreground="#F1D3BC"    Width="400"/>
                        </Border>
                       
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style BasedOn ="{StaticResource {x:Type CheckBox}}"
               TargetType="CheckBox"
               x:Key="CheckBoxBuild">
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Opacity" Value="0.3"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Opacity" Value="1"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Border BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="Transparent"
                                CornerRadius="20"
                                Width="200" Height="40">
                            <TextBlock Text="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
                              TextAlignment="Center" 
                                       FontSize="18"
                                       VerticalAlignment="Center"
                                       Foreground="#262F34"    Width="200"/>
                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ClearStyle"
               TargetType="Button">
            <Setter Property="FontFamily" Value="/InteractivePoster;component/Resource/Fonts/#Flanker Griffo"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="#F1D3BC"/>
            <Setter Property="Background" Value="#262F34"/>
            <Setter Property="BorderBrush" Value="#F1D3BC"/>
            <Setter Property="Width" Value="250"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="0,10,0,0"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border  CornerRadius="5"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#262F34"/>
                </Trigger>
            </Style.Triggers>
        </Style>       

    </Application.Resources>
</Application>
